fpath=(${ASDF_DIR}/completions $fpath)
autoload -Uz promptinit
promptinit
bindkey -v
export KEYTIMEOUT=1
precmd() {
  RPROMPT=""
}
zle-keymap-select() {
  RPROMPT=""
  [[ $KEYMAP = vicmd ]] && RPROMPT="%K{yellow}%B%F{yellow}[% normal]% %b%f%k"
  () { return $__prompt_status }
  zle reset-prompt
}
zle-line-init() {
  typeset -g __prompt_status="$?"
}
zle -N zle-keymap-select
zle -N zle-line-init

setopt histignorealldups sharehistory

# Keep 1000 lines of history within the shell and save it to ~/.zsh_history:
HISTSIZE=1000
SAVEHIST=1000
HISTFILE=~/.zsh_history

# Use modern completion system
autoload -Uz compinit
compinit
zstyle ':completion:*' auto-description 'specify: %d'
zstyle ':completion:*' completer _expand _complete _correct _approximate
zstyle ':completion:*' format 'Completing %d'
zstyle ':completion:*' group-name ''
zstyle ':completion:*' menu select=1
eval "$(dircolors -b)"
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*' list-colors ''
zstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more, or the character to insert%s
zstyle ':completion:*' matcher-list '' 'm:{a-z}={A-Z}' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=* l:|=*'
# This is the one that was prevent me from keyboard navigating the cd menu. 
# zstyle ':completion:*' menu select=long
zstyle ':completion:*' select-prompt %SScrolling active: current selection at %p%s
zstyle ':completion:*' use-compctl false
zstyle ':completion:*' verbose true

zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'
zstyle ':completion:*:kill:*' command 'ps -u $USER -o pid,%cpu,tty,cputime,cmd'

#Here begins my own configs, above was autogenerated. 
setopt menu_complete
# Auto jump might not work on WSL
# source /usr/share/autojump/autojump.sh
alias zshrc='$EDITOR ~/.zshrc' # Quick access to the ~/.zshrc file
alias ls='ls --color=always --group-directories-first'
alias extendleft='xrandr --output HDMI1 --auto --left-of eDP1'
# alias chatApp="tmux -2 new-session -c ~/devstuff/chatApp/ -s chatApp tmux split-window -b -h -l 40"
alias chatApp="tmux -2 new-session -c ~/devstuff/chatApp/back-end -s chatApp \; split-window -b -h -l 40 -c '#{pane_current_path}' \; new-window -c ~/devstuff/chatApp/front-end \; split-window -b -h -l 40 -c '#{pane_current_path}'\; neww -c ~/devstuff/chatApp"
alias walkGrid="tmux -2 new-session -c ~/devstuff/learningReact/api -s walkGrid \; split-window -b -h -l 40 -c '#{pane_current_path}' \; new-window -c ~/devstuff/learningReact/walkgrid \; split-window -b -h -l 40 -c '#{pane_current_path}'\; neww -c ~/devstuff/learningReact"
alias copy="/mnt/c/Windows/System32/clip.exe"
unalias ag
alias tclear="clear && tmux clear-history"

. $HOME/.asdf/asdf.sh

function koans (){
  while inotifywait -e close_write ./*; do ruby path_to_enlightenment.rb; done
}

function run_on_save(){
  while inotifywait -e close_write ./*; do ruby collections_regex.rb; done
}

function reponame (){
  basename `git rev-parse --show-toplevel`
}

alias dcebash='docker-compose exec postgres bash'
export AIRFLOW_HOME=~/airflow
alias cat='batcat'

n ()
{
    # Block nesting of nnn in subshells
    [ "${NNNLVL:-0}" -eq 0 ] || {
        echo "nnn is already running"
        return
    }

    # The behaviour is set to cd on quit (nnn checks if NNN_TMPFILE is set)
    # If NNN_TMPFILE is set to a custom path, it must be exported for nnn to
    # see. To cd on quit only on ^G, remove the "export" and make sure not to
    # use a custom path, i.e. set NNN_TMPFILE *exactly* as follows:
    #      NNN_TMPFILE="${XDG_CONFIG_HOME:-$HOME/.config}/nnn/.lastd"
    export NNN_TMPFILE="${XDG_CONFIG_HOME:-$HOME/.config}/nnn/.lastd"

    # Unmask ^Q (, ^V etc.) (if required, see `stty -a`) to Quit nnn
    # stty start undef
    # stty stop undef
    # stty lwrap undef
    # stty lnext undef

    # The command builtin allows one to alias nnn to n, if desired, without
    # making an infinitely recursive alias
    command nnn "$@"

    [ ! -f "$NNN_TMPFILE" ] || {
        . "$NNN_TMPFILE"
        rm -f "$NNN_TMPFILE" > /dev/null
    }
}
alias ff="git log --pretty=format: --name-status --all -M -B | sort -u | grep $1"
