
set -g mode-keys 'vi'
# setw -g mode-mouse on
# set -g mouse-select-pane on
mouse=off

set -g status-bg colour7
set -g status-fg colour0
bind-key '"' split-window -h -c "#{pane_current_path}"
bind-key '%' split-window -v -c "#{pane_current_path}"

######################
### DESIGN CHANGES ###
######################

# panes
set -g pane-border-fg black
set -g pane-active-border-fg brightred

## Status bar design
# status line
set -g status-utf8 on
set -g status-justify left 
set -g status-bg default
set -g status-fg colour12
set -g status-interval 2

# messaging
set -g message-fg black
set -g message-bg yellow
set -g message-command-fg blue
set -g message-command-bg black

#window mode
setw -g mode-bg colour6
setw -g mode-fg colour0

# window status
setw -g window-status-format " #F#I:#W#F "
setw -g window-status-current-format " #F#I:#W#F "
setw -g window-status-format "#[fg=magenta]#[bg=black] #I #[bg=cyan]#[fg=colour8] #W "
setw -g window-status-current-format "#[bg=brightmagenta]#[fg=colour8] #I #[fg=colour8]#[bg=colour14] #W "
setw -g window-status-current-bg colour0
setw -g window-status-current-fg colour11
setw -g window-status-current-attr dim
setw -g window-status-bg green
setw -g window-status-fg black
setw -g window-status-attr reverse

# Info on left (I don't have a session display for now)
set-window-option -g status-left " #S "
set -ag status-left ''

# loud or quiet?
set-option -g visual-activity off
set-option -g visual-bell off
set-option -g visual-silence off
set-window-option -g monitor-activity off
set-option -g bell-action none

set -g default-terminal "xterm-256color"

# The modes {
setw -g clock-mode-colour colour135
setw -g mode-attr bold
setw -g mode-fg colour196
setw -g mode-bg colour238

# }
# The panes {

set -g pane-border-bg colour235
set -g pane-border-fg colour238
set -g pane-active-border-bg colour236
set -g pane-active-border-fg colour51

# }
# The statusbar {

set -g status-position bottom
set -g status-bg colour234
set -g status-fg colour137
set -g status-attr dim
# set -g status-left ''
set -g status-right '#[fg=colour233,bg=colour241,bold] %d/%m #[fg=colour233,bg=colour245,bold] %H:%M:%S '
set -g status-right-length 50
set -g status-left-length 80

setw -g window-status-current-fg colour81
setw -g window-status-current-bg colour238
setw -g window-status-current-attr bold
setw -g window-status-current-format ' #I#[fg=colour250]:#[fg=colour255]#W#[fg=colour50]#F '

setw -g window-status-fg colour138
setw -g window-status-bg colour235
setw -g window-status-attr none
setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '

setw -g window-status-bell-attr bold
setw -g window-status-bell-fg colour255
setw -g window-status-bell-bg colour1

# }
# The messages {

set -g message-attr bold
set -g message-fg colour232
set -g message-bg colour166

# }

# Emacs style
# bind-key -t emacs-copy M-w copy-pipe "xsel -i -p -b"
# bind-key C-y run "xsel -o | tmux load-buffer - ; tmux paste-buffer"

# Vim style
# bind-key -t vi-copy y copy-pipe "xsel -i -p -b"
# bind-key -t vi-copy y copy-pipe "xsel -i -p -b"
# bind-key p run "xsel -o | tmux load-buffer - ; tmux paste-buffer"
# bind-key p run "xsel -o | tmux load-buffer - ; tmux paste-buffer"
bind-key p display-message "Read line 123 of ~/.tmux.conf"
# lines 120/121 are something I acquired when looking for easy copy/paste settings
# But they don't work, probably has to do with tmux version.


#mouse settings tmux 2.1
set -g mouse on
#lines 125 and 126 source when you press R after the prefix key
bind-key R source-file ~/.tmux.conf \; \
  display-message "source-file done"
# Backslash/linebreak/spaces for readability 134 - 136 was originally one line.
# bind-key -n MouseDown2Pane if-shell -t = "#{mouse_any_flag}" \
#   "xsel -o | tmux load-buffer - ; tmux paste-buffer" \
#   display-message "another test"
#
#VVVVVVVVThis is an example of the appropriate if-shell context that has worked for me
# if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.1" | bc)" = 1 ]' \
# 'bind-key U display-message "Pass"' 'bind-key U display-message "fail"'
#^^^^^^^^
#
#
#
if-shell  'xsel --version' \
'bind-key -t vi-copy y copy-pipe "xsel -i -p -b"' 'set -ag status-left "xsel or equivalent necessary. See line 144 of ~/.tmux.conf"'
# Explanation of line 144 and 145:
# the if-shell is being used to figure out if the system has xsel
# if it does, it uses xsel to copy it to the clipboard.
# If it doesn't, it displays a message in the statusbar.
# I chose to add that for portability, since I'm using a mac now
# and that will be a good reminder. 
#
# Syntax explanation:
# line 144 checks to see if xsel exists, if the command in the quotes
# is successful, then the first command on line 145 is executed
# If the command is not successful, the second command on line 145 is executed.
#
# The \ is needed to add another line
# the quotes are used to separate commands
# I do not know if a different syntax is possible or at least how it would work, but I have seen different solutions to different problems with if-shell
# and this is the only thing I was able to get working.
# Although even in this conf there are other if-shell that I tried to use as a base, but that didn't work out easily

bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" \
  "send-keys -M" \
  "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

# This particular setting allows you to see which pane is active
# in a very obvious way. 
set -g window-active-style 'bg=#262626'
set -g window-style 'bg=black'
